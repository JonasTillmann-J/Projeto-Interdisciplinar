/* Variáveis no arquivo que podem ser utilizadas em qualquer lugar com a função var()

   Geralmente, uso para manter um padrão nas medidas. Aqui não há muitos exemplos, mas, supondo que 
   a --posicaoinput corresponda ao que é usado em uma tela de 1920p, em 1333p eu poderia apenas 
   ajustar um valor para adequar corretamente. Deve haver uma medida mestre que, quando aplicada, 
   modifica o elemento conforme cada tamanho de tela, funcionando apenas ao reduzir o valor base. 
   No entanto, isso pode ser um pouco complicado de descobrir. 
*/

:root {
    --posicaoinput: 28%;
    --marginnav: 110px;
}

/* As configurações a seguir até o "@media(max-width: 1366px)" são para uma tela de 1920p, que
   é o melhor ambiente de trabalho para mim e serve como base. O "@media(max-width: 1366px)" será
   ativado quando um computador atender ao requisito de ter uma tela de 1366p. Isso refere-se à largura
   da tela, mas também pode ser ajustado informando a altura, modificando apenas isso:

   @media(max-width: 1366px) == @media(max-height: ???px)

# IMPORTANTE #
Abaixo, há informações importantes para você.
*/ 
body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #d3d3d3;
}

.left-panel {
    position: absolute;
    width: 50%;
    height: 100%;
    left: 50%;
}

.img {
    position: absolute;
    width: 100%;
    height: 100%;
}

.right-panel {
    position: absolute;
    background-color: #333;
    width: 50%;
    height: 100%;
    left: 0%;
}

.loginform {
    position: relative;
    width: 100%;
    height: 100%;
}

.nav {
    position: absolute;
    width: 98%;
    top: 1%;
    left: 2%;
    background: transparent;
    z-index: 99;
}

.nav a {
    margin-left: var(--marginnav);
    margin-right: var(--marginnav);
    font-size: 18px;
    color: #828181;
    text-decoration: none;
    transition: all 0.9s ease-in-out;
}

.nav a:hover {
    color: #ffffff;
}

.hidepassword {
    background: transparent;
    border: 0px;
    position: absolute;
    top: 8px;
    left: 88%;
    width: 35px;
    height: 35px;
}

.olhoaberto {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 35px;
    height: 35px;
}
.signup {
    position: relative;
    top: 90%;
    text-align: center;
    font-size: 1.1rem;
    line-height: 1rem;
    color: rgba(156, 163, 175, 1);
  }
/*--------------------------------------------------------*/
.logo {
    height: 100px;
    width: 100px;
    position: absolute;
    top: 1%;
    left: 1%;
}

.login {
    position: absolute;
    left: 40%;
    top: 5%;
    font-size: 5em;
    color: #d3d3d3;
}

.input-group {
    position: absolute;
    top: var(--posicaoinput);
    left: 23%;
}

.input {
    width: 500px;
    border: solid 1.5px #9e9e9e;
    border-radius: 1rem;
    background: none;
    padding: 1rem;
    font-size: 1rem;
    color: #f5f5f5;
    transition: border 1s cubic-bezier(0.4, 0, 0.2, 1);
}

.user-label {
    position: absolute;
    left: 15px;
    top: -1%;
    color: #e8e8e8;
    pointer-events: none;
    transform: translateY(1rem);
    transition: 1s cubic-bezier(0.4, 0, 0.2, 1);
}

.input:focus,
input:valid {
    outline: none;
    border: 1.5px solid #1a73e8;
}

.input:focus~label,
input:valid~label {
    transform: translateY(-50%) scale(0.8);
    background-color: #333;
    padding: 0 .2em;
    color: #2196f3;
    font-size: 1.5em;
}

/*------------------------------------------------------------------------*/
.input-group-senha {
    position: absolute;
    top: calc(var(--posicaoinput) + 10%);
    left: 23%;
}

.input-senha {
    width: 500px;
    border: solid 1.5px #9e9e9e;
    border-radius: 1rem;
    background: none;
    padding: 1rem;
    font-size: 1rem;
    color: #f5f5f5;
    transition: border 1s cubic-bezier(0.4, 0, 0.2, 1);
}

.user-label-senha {
    position: absolute;
    left: 15px;
    top: -1%;
    color: #e8e8e8;
    pointer-events: none;
    transform: translateY(1rem);
    transition: 1s cubic-bezier(0.4, 0, 0.2, 1);
}

.input-senha:focus,
input:valid {
    outline: none;
    border: 1.5px solid #1a73e8;
}

.input-senha:focus~label,
input:valid~label {
    transform: translateY(-50%) scale(0.8);
    background-color: #333;
    padding: 0 .2em;
    color: #2196f3;
    font-size: 1.5em;
}

/*------------------------------------------------------------------------*/
.btn-submit {
    position: absolute;
    top: 80%;
    left: 45%;
    padding: 1.3em 3em;
    font-size: 12px;
    text-transform: uppercase;
    letter-spacing: 2.5px;
    font-weight: 500;
    color: #000;
    background-color: #fff;
    border: none;
    border-radius: 45px;
    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.8s ease 0s;
    cursor: pointer;
    outline: none;
}

.btn-submit:hover {
    background-color: #1fa36e;
    box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);
    color: rgb(255, 255, 255);
    transform: translateY(-7px);
}

.btn-submit:active {
    transform: translateY(-1px);
}

/* IMPORTANTE: INFORMAÇÕES ESSENCIAIS

1. Telas de 1366p seguem os atributos especificados aqui. Apenas os atributos listados sofrerão alterações; os demais obedecerão ao
padrão geral.

2. Às vezes, o "@media(max-width: 1366px)" acha que só pq é grande vale por um 1920p, mas não é o caso. Se algum atributo
não estiver respondendo ou mudando quando alterado neste arquivo, verifique no inspetor do navegador, na aba de estilos, se os
atributos listados aqui estão ativados (não riscados) ou não (riscados). Como "@media(max-width: 1366px)" está ao final do arquivo,
ele será exibido na mesma ordem no inspetor.

3. Escreva apenas o necessário. A "maldição" do CSS é que, quanto mais linhas, mais internamente problemático ele se torna; isso é
especialmente verdadeiro para "@media(max-width: 1366px)". Use os métodos `calc()` e `var()` conforme necessário e a vontade, mas
evite muitos "@media" para diferentes resoluções, pois isso pode complicar o código.

4. Para projetos futuros, "@media(max-width: 1366px)" pode ser útil ocasionalmente, mas, se o projeto se expandir, considere formas
mais robustas, como automatização com JavaScript ou frameworks especializados em responsividade. O Chrome permite ajustar o tamanho da
tela em pixels no inspetor, onde você pode experimentar a resolução 1366p em casa mesmo na tela 1920p, o @media, funcionaria no emulador
de telas.
*/
@media(max-width: 1366px) {
    .input {
        width: 400px;
    }

    .input-group {
        top: calc(var(--posicaoinput) + 15%);
    }

    .input-senha {
        width: 400px;
    }

    .input-group-senha {
        top: calc(var(--posicaoinput) + 35%);
    }

    .nav {
        width: 97%;
    }

    .nav a {
        font-size: 19px;
        margin-left: calc(var(--marginnav) - 10px);
        margin-right: calc(var(--marginnav) -10px);
    }
}